{

    "tokens":[
        {"tokenType":"Service_Start","discard":false,"state":"S","stringMatcher":{"input":"Text","containText":["Service [", " start"]},"regExMatcher":{"input":"Text","test":"Service \\[([^]]*)\\] *(start)\\.$","matchingKeys":["ServiceName", "finish"]},"copyObject":{"Header.Timestamp":"StartTime", "ServiceName":"Name,Global.Services.Set", "Header.Key":"Global.LogKey", "finish":"Global.finish"}},
        {"tokenType":"Service_Start","discard":false,"state":"S","stringMatcher":{"input":"Text","containText":["Service [", " start. Request Tag"]},"regExMatcher":{"input":"Text","test":"Service \\[([^]]*)\\].*(start).*\\[(.*)\\]","matchingKeys":["ServiceName", "finish", "RequestTag"]},"copyObject":{"Header.Timestamp":"StartTime", "ServiceName":"Name,Global.Services.Set", "RequestTag":"Global.RequestTag", "Header.Key":"Global.LogKey", "finish":"Global.finish"}},
        {"tokenType":"Service_End","discard":false,"state":"F","stringMatcher":{"input":"Text","containText":["Service [",  " finish"]},"regExMatcher":{"input":"Text","test":"(finish).*\\(([0-9]+)ms\\)","matchingKeys":["finish", "RunTime"]},"copyObject":{"Header.Timestamp":"EndTime", "RunTime":"RunTime", "finish":"Global.finish"}},
        {"tokenType":"SubServ_Start","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Sub-service [", " start"]},"regExMatcher":{"input":"Text","test":"Sub-service \\[([^]]*)\\] *start\\.$","matchingKeys":["Sub-serviceName"]},"copyObject":{"Header.Timestamp":"StartTime", "Sub-serviceName":"Name"}},
        {"tokenType":"SubServ_End","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Sub-service [",  " finish"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{"Header.Timestamp":"EndTime"}},
        {"tokenType":"@6","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Check element flows"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@7","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Creating new transaction with name"]},"regExMatcher":{"input":"","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@8","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Opened new EntityManager "]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@9","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Changing isolation level of JDBC Connection"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@10","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["On TransactionImpl creation, JpaCompliance"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@11","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["begin"]},"regExMatcher":{"input":"Text","test":"(^begin$)","matchingKeys":["begin"]},"copyObject":{}},
        {"tokenType":"@12","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Exposing JPA transaction as JDBC"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@13","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Process [", " start."]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@14","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Process [", "finish"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"Task_Start","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Task [", " start."]},"regExMatcher":{"input":"Text","test":"Task \\[(.*)\\]\\((.*)\\) start","matchingKeys":["TaskID", "TaskName"]},"copyObject":{"Header.Timestamp":"StartTime", "TaskName":"Name", "TaskID":"TaskID", "Header.Key":"LogKey"}},
        {"tokenType":"Task_End","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Task [", "finish"]},"regExMatcher":{"input":"Text","test":"finish.*\\(([0-9]+)ms\\)","matchingKeys":["RunTime"]},"copyObject":{"Header.Timestamp":"EndTime", "RunTime":"RunTime"}},
        {"tokenType":"TaskInvokingClass","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Invoking class : [", "], method : ["]},"regExMatcher":{"input":"Text","test":"Invoking class : \\[(.*)\\], method : \\[(.*)\\]","matchingKeys":["Class", "Method"]},"copyObject":{"Class":"Class", "Method":"Method"}},
        {"tokenType":"@18","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Type binding of interface "]},"regExMatcher":{"input":"","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@19","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Initiating transaction commit"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@20","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Committing JPA transaction on EntityManager ["]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@21","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["committing"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@22","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Initiating transaction rollback"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@23","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Rolling back JPA transaction on EntityManager ["]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@24","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["rolling back"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@25","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Resetting isolation level of JDBC Connection ["]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@26","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Closing JPA EntityManager ["]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"Exception","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["exception"]},"extraMatcher1":{"input":"Level","containText":["ERROR"]},"regExMatcher":{"input":"Text","test":"((?:.|\\n)*)","matchingKeys":["Exception"]},"copyObject":{"Exception":"Global.Exception.Arr"}},
        {"tokenType":"@28","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Failed to complete request:"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@29","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Executing prepared SQL query"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"Query","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Executing prepared SQL statement ["]},"regExMatcher":{"input":"Text","test":"Executing prepared SQL statement \\[((?:.|\\n)*)\\]","matchingKeys":["SQL"]},"copyObject":{"Header.Timestamp":"StartTime", "SQL":"SQL"}},
        {"tokenType":"Parameter","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Setting SQL statement parameter value: column index"]},"regExMatcher":{"input":"Text","test":"parameter value \\[(.*)\\], value class \\[(.*)\\]","matchingKeys":["Parameter", "Type"]},"copyObject":{"Parameter":"Param.Array,Global.Index.Set"}},
        {"tokenType":"Parameter","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["binding parameter ["]},"regExMatcher":{"input":"Text","test":"binding parameter \\[[0-9]*\\] as \\[(.*)\\] - \\[(.*)\\]","matchingKeys":["Type", "Parameter"]},"copyObject":{"Parameter":"Param.Array,Global.Index.Set"}},
        {"tokenType":"@33","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Completed",  "OK "]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@34","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Generated identifier: "]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@35","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Processing flush-time cascades"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@36","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Dirty checking collections"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@37","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Flushed: ", "insertions,", "updates,"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@38","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Flushed: ", "(re)creations,", "updates,"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@39","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Listing entities:"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@40","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["com.dongkuk.dmes.cr.frm.access.log.RequestLog"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"@41","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Closing un-released batch"]},"regExMatcher":{"input":"Text","test":"","matchingKeys":[]},"copyObject":{}},
        {"tokenType":"Query","discard":false,"state":"","stringMatcher":{"input":"Text","containText":[]},"extraMatcher1":{"input":"NDC","containText":["org.hibernate.SQL"]},"regExMatcher":{"input":"Text","test":"((?:.|\\n)*)","matchingKeys":["SQL"]},"copyObject":{"Header.Timestamp":"StartTime", "SQL":"SQL"}},
        {"tokenType":"Query","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["Mybatis SQL : "]},"regExMatcher":{"input":"Text","test":"Mybatis SQL : ((?:.|\\n)*)","matchingKeys":["SQL"]},"copyObject":{"Header.Timestamp":"StartTime", "SQL":"SQL"}},
        {"tokenType":"PlSubProcess","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Parallel Sub-process run "]},"regExMatcher":{"input":"","test":"(Parallel Sub-process)","matchingKeys":["ProcessType"]},"copyObject":{"ProcessType":"ProcessType"}},
        {"tokenType":"PlMultiInstance","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Parallel Multi Instance task"]},"regExMatcher":{"input":"","test":"(Parallel Multi Instance)","matchingKeys":["ProcessType"]},"copyObject":{"ProcessType":"ProcessType"}},
        {"tokenType":"SqMultiInstance","discard":true,"state":"","stringMatcher":{"input":"Text","containText":["Sequential Multi Instance task"]},"regExMatcher":{"input":"","test":"(Sequential Multi Instance)","matchingKeys":["ProcessType"]},"copyObject":{"ProcessType":"ProcessType"}},
        {"tokenType":"Post","discard":false,"state":"","stringMatcher":{"input":"Text","containText":["POST "]},"regExMatcher":{"input":"Text","test":"^POST '([^.]*)', parameters=\\{(.*)\\}","matchingKeys":["Address", "Parameters"]},"copyObject":{"Address":"Global.Address", "Parameters":"Global.Parameters"}}
    ]
}

